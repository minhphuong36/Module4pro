package com.blog_module4_c0922h1.controller;import com.blog_module4_c0922h1.model.Blog;import com.blog_module4_c0922h1.model.Category;import com.blog_module4_c0922h1.service.BlogService;import com.blog_module4_c0922h1.service.CategoryService;import com.google.protobuf.compiler.PluginProtos;import com.sun.org.apache.xpath.internal.operations.Mod;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.data.domain.PageRequest;import org.springframework.data.domain.Sort;import org.springframework.stereotype.Controller;import org.springframework.util.FileCopyUtils;import org.springframework.web.bind.annotation.*;import org.springframework.web.multipart.MultipartFile;import org.springframework.web.servlet.ModelAndView;import java.io.File;import java.io.IOException;import java.util.List;@Controllerpublic class BlogController {    @Autowired    BlogService blogService;    @ModelAttribute("categories")    public List<Category>  categories(){        return categoryService.getAll();    }    @Autowired    CategoryService categoryService;    @GetMapping("/blogs")    public ModelAndView show(@RequestParam(defaultValue = "0") int page){        ModelAndView modelAndView = new ModelAndView("showBlog");        modelAndView.addObject("blogs",blogService.getAll(PageRequest.of(page,3, Sort.by("id"))));        return modelAndView;    }    @GetMapping("/create")    public ModelAndView showCreate(){        ModelAndView modelAndView = new ModelAndView("create");        return modelAndView;    }    @PostMapping("/create")    public String create(@ModelAttribute Blog blog,                         @RequestParam MultipartFile fileImg){        String nameFile = fileImg.getOriginalFilename();        try {            FileCopyUtils.copy(fileImg.getBytes(),                    new File("D:\\Modul4\\demo_blog_c0922h1\\src\\main" +                            "\\webapp\\WEB-INF\\img/" + nameFile));        } catch (Exception e) {            e.printStackTrace();        }        blog.setImg("/img/" + nameFile);        blogService.save(blog);        return "redirect:/blogs";    }    @GetMapping("/edit/{id}")    public ModelAndView edit(@PathVariable int id){        ModelAndView modelAndView = new ModelAndView("edit");        modelAndView.addObject("blog", blogService.findById(id));        return modelAndView;    }    @PostMapping("/edit")    public String edit(@ModelAttribute Blog blog, @RequestParam MultipartFile fileImg){        if(!fileImg.isEmpty()){            try {                FileCopyUtils.copy(fileImg.getBytes(),                        new File("D:\\Modul4\\demo_blog_c0922h1\\src\\main\\webapp\\WEB-INF" + blog.getImg()));            } catch (Exception e) {                e.printStackTrace();            }        }        blogService.save(blog);        return "redirect:/blogs";    }    @GetMapping("/delete/{id}")    public String delete(@PathVariable int id){        blogService.deleteById(id);        return "redirect:/blogs";    }    @GetMapping("/detail/{id}")    public ModelAndView detail(@PathVariable int id){        ModelAndView modelAndView = new ModelAndView("detail");        modelAndView.addObject("blog",blogService.findById(id));        return modelAndView;    }}